#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ARES
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bdares")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertDescuentos(Descuentos instance);
    partial void UpdateDescuentos(Descuentos instance);
    partial void DeleteDescuentos(Descuentos instance);
    partial void InsertDetallesPedido(DetallesPedido instance);
    partial void UpdateDetallesPedido(DetallesPedido instance);
    partial void DeleteDetallesPedido(DetallesPedido instance);
    partial void InsertPedidos(Pedidos instance);
    partial void UpdatePedidos(Pedidos instance);
    partial void DeletePedidos(Pedidos instance);
    partial void InsertProductos(Productos instance);
    partial void UpdateProductos(Productos instance);
    partial void DeleteProductos(Productos instance);
    partial void InsertServicios(Servicios instance);
    partial void UpdateServicios(Servicios instance);
    partial void DeleteServicios(Servicios instance);
    partial void InsertServiciosUsuario(ServiciosUsuario instance);
    partial void UpdateServiciosUsuario(ServiciosUsuario instance);
    partial void DeleteServiciosUsuario(ServiciosUsuario instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Descuentos> Descuentos
		{
			get
			{
				return this.GetTable<Descuentos>();
			}
		}
		
		public System.Data.Linq.Table<DetallesPedido> DetallesPedido
		{
			get
			{
				return this.GetTable<DetallesPedido>();
			}
		}
		
		public System.Data.Linq.Table<Pedidos> Pedidos
		{
			get
			{
				return this.GetTable<Pedidos>();
			}
		}
		
		public System.Data.Linq.Table<Productos> Productos
		{
			get
			{
				return this.GetTable<Productos>();
			}
		}
		
		public System.Data.Linq.Table<Servicios> Servicios
		{
			get
			{
				return this.GetTable<Servicios>();
			}
		}
		
		public System.Data.Linq.Table<ServiciosUsuario> ServiciosUsuario
		{
			get
			{
				return this.GetTable<ServiciosUsuario>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Descuentos")]
	public partial class Descuentos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UsuarioID;
		
		private decimal _Porcentaje;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsuarioIDChanging(System.Nullable<int> value);
    partial void OnUsuarioIDChanged();
    partial void OnPorcentajeChanging(decimal value);
    partial void OnPorcentajeChanged();
    #endregion
		
		public Descuentos()
		{
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioID", DbType="Int")]
		public System.Nullable<int> UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioIDChanging(value);
					this.SendPropertyChanging();
					this._UsuarioID = value;
					this.SendPropertyChanged("UsuarioID");
					this.OnUsuarioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Porcentaje", DbType="Decimal(5,2) NOT NULL")]
		public decimal Porcentaje
		{
			get
			{
				return this._Porcentaje;
			}
			set
			{
				if ((this._Porcentaje != value))
				{
					this.OnPorcentajeChanging(value);
					this.SendPropertyChanging();
					this._Porcentaje = value;
					this.SendPropertyChanged("Porcentaje");
					this.OnPorcentajeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Descuentos", Storage="_Usuarios", ThisKey="UsuarioID", OtherKey="ID", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Descuentos.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Descuentos.Add(this);
						this._UsuarioID = value.ID;
					}
					else
					{
						this._UsuarioID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetallesPedido")]
	public partial class DetallesPedido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PedidoID;
		
		private System.Nullable<int> _ProductoID;
		
		private int _Cantidad;
		
		private decimal _Precio;
		
		private EntityRef<Pedidos> _Pedidos;
		
		private EntityRef<Productos> _Productos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPedidoIDChanging(System.Nullable<int> value);
    partial void OnPedidoIDChanged();
    partial void OnProductoIDChanging(System.Nullable<int> value);
    partial void OnProductoIDChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public DetallesPedido()
		{
			this._Pedidos = default(EntityRef<Pedidos>);
			this._Productos = default(EntityRef<Productos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PedidoID", DbType="Int")]
		public System.Nullable<int> PedidoID
		{
			get
			{
				return this._PedidoID;
			}
			set
			{
				if ((this._PedidoID != value))
				{
					if (this._Pedidos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPedidoIDChanging(value);
					this.SendPropertyChanging();
					this._PedidoID = value;
					this.SendPropertyChanged("PedidoID");
					this.OnPedidoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoID", DbType="Int")]
		public System.Nullable<int> ProductoID
		{
			get
			{
				return this._ProductoID;
			}
			set
			{
				if ((this._ProductoID != value))
				{
					if (this._Productos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductoIDChanging(value);
					this.SendPropertyChanging();
					this._ProductoID = value;
					this.SendPropertyChanged("ProductoID");
					this.OnProductoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedidos_DetallesPedido", Storage="_Pedidos", ThisKey="PedidoID", OtherKey="ID", IsForeignKey=true)]
		public Pedidos Pedidos
		{
			get
			{
				return this._Pedidos.Entity;
			}
			set
			{
				Pedidos previousValue = this._Pedidos.Entity;
				if (((previousValue != value) 
							|| (this._Pedidos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pedidos.Entity = null;
						previousValue.DetallesPedido.Remove(this);
					}
					this._Pedidos.Entity = value;
					if ((value != null))
					{
						value.DetallesPedido.Add(this);
						this._PedidoID = value.ID;
					}
					else
					{
						this._PedidoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Pedidos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_DetallesPedido", Storage="_Productos", ThisKey="ProductoID", OtherKey="ID", IsForeignKey=true)]
		public Productos Productos
		{
			get
			{
				return this._Productos.Entity;
			}
			set
			{
				Productos previousValue = this._Productos.Entity;
				if (((previousValue != value) 
							|| (this._Productos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Productos.Entity = null;
						previousValue.DetallesPedido.Remove(this);
					}
					this._Productos.Entity = value;
					if ((value != null))
					{
						value.DetallesPedido.Add(this);
						this._ProductoID = value.ID;
					}
					else
					{
						this._ProductoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Productos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pedidos")]
	public partial class Pedidos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UsuarioID;
		
		private System.DateTime _Fecha;
		
		private EntitySet<DetallesPedido> _DetallesPedido;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsuarioIDChanging(System.Nullable<int> value);
    partial void OnUsuarioIDChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Pedidos()
		{
			this._DetallesPedido = new EntitySet<DetallesPedido>(new Action<DetallesPedido>(this.attach_DetallesPedido), new Action<DetallesPedido>(this.detach_DetallesPedido));
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioID", DbType="Int")]
		public System.Nullable<int> UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioIDChanging(value);
					this.SendPropertyChanging();
					this._UsuarioID = value;
					this.SendPropertyChanged("UsuarioID");
					this.OnUsuarioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pedidos_DetallesPedido", Storage="_DetallesPedido", ThisKey="ID", OtherKey="PedidoID")]
		public EntitySet<DetallesPedido> DetallesPedido
		{
			get
			{
				return this._DetallesPedido;
			}
			set
			{
				this._DetallesPedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Pedidos", Storage="_Usuarios", ThisKey="UsuarioID", OtherKey="ID", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Pedidos.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Pedidos.Add(this);
						this._UsuarioID = value.ID;
					}
					else
					{
						this._UsuarioID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Pedidos = this;
		}
		
		private void detach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Pedidos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Productos")]
	public partial class Productos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Descripción;
		
		private decimal _Precio;
		
		private int _Stock;
		
		private System.Nullable<int> _ProductoPadreID;
		
		private EntitySet<DetallesPedido> _DetallesPedido;
		
		private EntitySet<Productos> _Productos2;
		
		private EntityRef<Productos> _Productos1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnStockChanging(int value);
    partial void OnStockChanged();
    partial void OnProductoPadreIDChanging(System.Nullable<int> value);
    partial void OnProductoPadreIDChanged();
    #endregion
		
		public Productos()
		{
			this._DetallesPedido = new EntitySet<DetallesPedido>(new Action<DetallesPedido>(this.attach_DetallesPedido), new Action<DetallesPedido>(this.detach_DetallesPedido));
			this._Productos2 = new EntitySet<Productos>(new Action<Productos>(this.attach_Productos2), new Action<Productos>(this.detach_Productos2));
			this._Productos1 = default(EntityRef<Productos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="NVarChar(500)")]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this.OnDescripciónChanging(value);
					this.SendPropertyChanging();
					this._Descripción = value;
					this.SendPropertyChanged("Descripción");
					this.OnDescripciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int NOT NULL")]
		public int Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoPadreID", DbType="Int")]
		public System.Nullable<int> ProductoPadreID
		{
			get
			{
				return this._ProductoPadreID;
			}
			set
			{
				if ((this._ProductoPadreID != value))
				{
					if (this._Productos1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductoPadreIDChanging(value);
					this.SendPropertyChanging();
					this._ProductoPadreID = value;
					this.SendPropertyChanged("ProductoPadreID");
					this.OnProductoPadreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_DetallesPedido", Storage="_DetallesPedido", ThisKey="ID", OtherKey="ProductoID")]
		public EntitySet<DetallesPedido> DetallesPedido
		{
			get
			{
				return this._DetallesPedido;
			}
			set
			{
				this._DetallesPedido.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_Productos", Storage="_Productos2", ThisKey="ID", OtherKey="ProductoPadreID")]
		public EntitySet<Productos> Productos2
		{
			get
			{
				return this._Productos2;
			}
			set
			{
				this._Productos2.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_Productos", Storage="_Productos1", ThisKey="ProductoPadreID", OtherKey="ID", IsForeignKey=true)]
		public Productos Productos1
		{
			get
			{
				return this._Productos1.Entity;
			}
			set
			{
				Productos previousValue = this._Productos1.Entity;
				if (((previousValue != value) 
							|| (this._Productos1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Productos1.Entity = null;
						previousValue.Productos2.Remove(this);
					}
					this._Productos1.Entity = value;
					if ((value != null))
					{
						value.Productos2.Add(this);
						this._ProductoPadreID = value.ID;
					}
					else
					{
						this._ProductoPadreID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Productos1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Productos = this;
		}
		
		private void detach_DetallesPedido(DetallesPedido entity)
		{
			this.SendPropertyChanging();
			entity.Productos = null;
		}
		
		private void attach_Productos2(Productos entity)
		{
			this.SendPropertyChanging();
			entity.Productos1 = this;
		}
		
		private void detach_Productos2(Productos entity)
		{
			this.SendPropertyChanging();
			entity.Productos1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Servicios")]
	public partial class Servicios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Descripción;
		
		private decimal _Precio;
		
		private EntitySet<ServiciosUsuario> _ServiciosUsuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDescripciónChanging(string value);
    partial void OnDescripciónChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    #endregion
		
		public Servicios()
		{
			this._ServiciosUsuario = new EntitySet<ServiciosUsuario>(new Action<ServiciosUsuario>(this.attach_ServiciosUsuario), new Action<ServiciosUsuario>(this.detach_ServiciosUsuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripción", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Descripción
		{
			get
			{
				return this._Descripción;
			}
			set
			{
				if ((this._Descripción != value))
				{
					this.OnDescripciónChanging(value);
					this.SendPropertyChanging();
					this._Descripción = value;
					this.SendPropertyChanged("Descripción");
					this.OnDescripciónChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicios_ServiciosUsuario", Storage="_ServiciosUsuario", ThisKey="ID", OtherKey="ServicioID")]
		public EntitySet<ServiciosUsuario> ServiciosUsuario
		{
			get
			{
				return this._ServiciosUsuario;
			}
			set
			{
				this._ServiciosUsuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ServiciosUsuario(ServiciosUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Servicios = this;
		}
		
		private void detach_ServiciosUsuario(ServiciosUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Servicios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiciosUsuario")]
	public partial class ServiciosUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UsuarioID;
		
		private System.Nullable<int> _ServicioID;
		
		private System.DateTime _Fecha;
		
		private bool _DescuentoAplicado;
		
		private EntityRef<Servicios> _Servicios;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsuarioIDChanging(System.Nullable<int> value);
    partial void OnUsuarioIDChanged();
    partial void OnServicioIDChanging(System.Nullable<int> value);
    partial void OnServicioIDChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnDescuentoAplicadoChanging(bool value);
    partial void OnDescuentoAplicadoChanged();
    #endregion
		
		public ServiciosUsuario()
		{
			this._Servicios = default(EntityRef<Servicios>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioID", DbType="Int")]
		public System.Nullable<int> UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioIDChanging(value);
					this.SendPropertyChanging();
					this._UsuarioID = value;
					this.SendPropertyChanged("UsuarioID");
					this.OnUsuarioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicioID", DbType="Int")]
		public System.Nullable<int> ServicioID
		{
			get
			{
				return this._ServicioID;
			}
			set
			{
				if ((this._ServicioID != value))
				{
					if (this._Servicios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnServicioIDChanging(value);
					this.SendPropertyChanging();
					this._ServicioID = value;
					this.SendPropertyChanged("ServicioID");
					this.OnServicioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescuentoAplicado", DbType="Bit NOT NULL")]
		public bool DescuentoAplicado
		{
			get
			{
				return this._DescuentoAplicado;
			}
			set
			{
				if ((this._DescuentoAplicado != value))
				{
					this.OnDescuentoAplicadoChanging(value);
					this.SendPropertyChanging();
					this._DescuentoAplicado = value;
					this.SendPropertyChanged("DescuentoAplicado");
					this.OnDescuentoAplicadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Servicios_ServiciosUsuario", Storage="_Servicios", ThisKey="ServicioID", OtherKey="ID", IsForeignKey=true)]
		public Servicios Servicios
		{
			get
			{
				return this._Servicios.Entity;
			}
			set
			{
				Servicios previousValue = this._Servicios.Entity;
				if (((previousValue != value) 
							|| (this._Servicios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Servicios.Entity = null;
						previousValue.ServiciosUsuario.Remove(this);
					}
					this._Servicios.Entity = value;
					if ((value != null))
					{
						value.ServiciosUsuario.Add(this);
						this._ServicioID = value.ID;
					}
					else
					{
						this._ServicioID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Servicios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_ServiciosUsuario", Storage="_Usuarios", ThisKey="UsuarioID", OtherKey="ID", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.ServiciosUsuario.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.ServiciosUsuario.Add(this);
						this._UsuarioID = value.ID;
					}
					else
					{
						this._UsuarioID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Nombre;
		
		private string _Email;
		
		private string _Teléfono;
		
		private string _Contraseña;
		
		private string _TipoUsuario;
		
		private EntitySet<Descuentos> _Descuentos;
		
		private EntitySet<Pedidos> _Pedidos;
		
		private EntitySet<ServiciosUsuario> _ServiciosUsuario;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnTeléfonoChanging(string value);
    partial void OnTeléfonoChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnTipoUsuarioChanging(string value);
    partial void OnTipoUsuarioChanged();
    #endregion
		
		public Usuarios()
		{
			this._Descuentos = new EntitySet<Descuentos>(new Action<Descuentos>(this.attach_Descuentos), new Action<Descuentos>(this.detach_Descuentos));
			this._Pedidos = new EntitySet<Pedidos>(new Action<Pedidos>(this.attach_Pedidos), new Action<Pedidos>(this.detach_Pedidos));
			this._ServiciosUsuario = new EntitySet<ServiciosUsuario>(new Action<ServiciosUsuario>(this.attach_ServiciosUsuario), new Action<ServiciosUsuario>(this.detach_ServiciosUsuario));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Teléfono", DbType="NVarChar(15)")]
		public string Teléfono
		{
			get
			{
				return this._Teléfono;
			}
			set
			{
				if ((this._Teléfono != value))
				{
					this.OnTeléfonoChanging(value);
					this.SendPropertyChanging();
					this._Teléfono = value;
					this.SendPropertyChanged("Teléfono");
					this.OnTeléfonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoUsuario", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string TipoUsuario
		{
			get
			{
				return this._TipoUsuario;
			}
			set
			{
				if ((this._TipoUsuario != value))
				{
					this.OnTipoUsuarioChanging(value);
					this.SendPropertyChanging();
					this._TipoUsuario = value;
					this.SendPropertyChanged("TipoUsuario");
					this.OnTipoUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Descuentos", Storage="_Descuentos", ThisKey="ID", OtherKey="UsuarioID")]
		public EntitySet<Descuentos> Descuentos
		{
			get
			{
				return this._Descuentos;
			}
			set
			{
				this._Descuentos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Pedidos", Storage="_Pedidos", ThisKey="ID", OtherKey="UsuarioID")]
		public EntitySet<Pedidos> Pedidos
		{
			get
			{
				return this._Pedidos;
			}
			set
			{
				this._Pedidos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_ServiciosUsuario", Storage="_ServiciosUsuario", ThisKey="ID", OtherKey="UsuarioID")]
		public EntitySet<ServiciosUsuario> ServiciosUsuario
		{
			get
			{
				return this._ServiciosUsuario;
			}
			set
			{
				this._ServiciosUsuario.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Descuentos(Descuentos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Descuentos(Descuentos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Pedidos(Pedidos entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
		
		private void attach_ServiciosUsuario(ServiciosUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_ServiciosUsuario(ServiciosUsuario entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
}
#pragma warning restore 1591
